[project]
name = "redis-wellness-backend"
version = "0.1.0"
description = "Privacy-first wellness application with Redis-powered conversational memory"
authors = [{name = "User", email = "user@example.com"}]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "redis>=5.0.0",
    "redisvl>=0.2.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    # AI/ML dependencies
    "langchain>=0.3.0",
    "langchain-core>=0.3.0",
    "langchain-ollama>=0.2.0",
    # Embedding models for RAG
    "sentence-transformers>=3.0.0",
    "numpy>=1.24.0",
    # Token counting for context management
    "tiktoken>=0.5.0",
    "langgraph>=1.0.1",
    "langgraph-checkpoint>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "pre-commit>=4.3.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    "venv",
    ".venv",
    "env",
    ".env",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip without explicit strict parameter
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]

[tool.black]
line-length = 88
target-version = ["py311"]
